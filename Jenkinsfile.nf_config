pipeline {
  agent any
  options {
    timestamps()
    timeout(time: 45, unit: 'MINUTES')
  }
  parameters {
    string(name: 'NEW_BUILD_PATH', defaultValue: '/home/labadmin/6.3.0/EA3')
    string(name: 'NEW_VERSION',    defaultValue: '6.3.0_EA3')
    choice(name: 'DEPLOYMENT_TYPE', choices: ['Low','Medium','High'])
    string(name: 'SERVER_FILE',         defaultValue: 'server_pci_map.txt')
    string(name: 'SERVER_PCI_MAP',      defaultValue: 'server_pci_map.txt')
    string(name: 'SERVER_IP_RANGE_MAP', defaultValue: 'server_map.txt')
    string(name: 'HOST_USER', defaultValue: 'root')
    string(name: 'SSH_KEY_PATH', defaultValue: '/var/lib/jenkins/.ssh/id_rsa', description: 'Private key on Jenkins node')
    string(name: 'CN_DEPLOYMENT', defaultValue: '')
    string(name: 'N3_PCI', defaultValue: '')
    string(name: 'N6_PCI', defaultValue: '')
  }
  environment {
    NF_SCRIPT = 'scripts/nf_config.sh'
  }
  stages {
    stage('Checkout') { steps { checkout scm } }
    stage('Prep') {
      steps {
        sh '''
          set -euo pipefail
          test -f "${NF_SCRIPT}" || { echo "ERROR: ${NF_SCRIPT} not found"; exit 2; }
          sed -i 's/\\r$//' "${NF_SCRIPT}" || true
          chmod +x "${NF_SCRIPT}"
        '''
      }
    }
    stage('NF services config') {
      steps {
        sh '''
          set -euo pipefail
          test -f "${SSH_KEY_PATH}" || { echo "ERROR: SSH key not found at ${SSH_KEY_PATH}"; exit 3; }

          for f in "${SERVER_FILE}" "${SERVER_PCI_MAP}" "${SERVER_IP_RANGE_MAP}"; do
            if [ ! -f "$f" ]; then echo "[pipeline] WARNING: data file $f not present in repo"; fi
          done

          env \
            SERVER_FILE="${SERVER_FILE}" \
            SSH_KEY="${SSH_KEY_PATH}" \
            NEW_BUILD_PATH="${NEW_BUILD_PATH}" \
            NEW_VERSION="${NEW_VERSION}" \
            DEPLOYMENT_TYPE="${DEPLOYMENT_TYPE}" \
            SERVER_PCI_MAP="${SERVER_PCI_MAP}" \
            SERVER_IP_RANGE_MAP="${SERVER_IP_RANGE_MAP}" \
            HOST_USER="${HOST_USER}" \
            CN_DEPLOYMENT="${CN_DEPLOYMENT}" \
            N3_PCI="${N3_PCI}" \
            N6_PCI="${N6_PCI}" \
          bash -euo pipefail "${NF_SCRIPT}" |& tee nf_config.log
        '''
      }
    }
  }
  post {
    always {
      archiveArtifacts artifacts: 'nf_config.log', allowEmptyArchive: true
    }
  }
}
