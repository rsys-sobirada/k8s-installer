// Jenkinsfile.nf_config â€“ auth via credentials
parameters {
  string(name: 'CREDENTIALS_ID', defaultValue: 'ssh_key', description: 'SSH cred ID (leave blank to use SSH_KEY_PATH)')
  string(name: 'SSH_KEY_PATH', defaultValue: '/var/lib/jenkins/.ssh/id_rsa', description: 'Used only if CREDENTIALS_ID is blank')
  // ... your other params ...
}
stage('NF services config') {
  steps {
    script {
      if (params.CREDENTIALS_ID?.trim()) {
        withCredentials([sshUserPrivateKey(credentialsId: params.CREDENTIALS_ID, keyFileVariable: 'SSH_KEY', usernameVariable: 'IGN')]) {
          sh '''
            bash -lc '
              set -euo pipefail
              script="$(cat .nf_script_path)"
              env SERVER_FILE="${SERVER_FILE}" SSH_KEY="${SSH_KEY}" NEW_BUILD_PATH="${NEW_BUILD_PATH}" \
                  NEW_VERSION="${NEW_VERSION}" DEPLOYMENT_TYPE="${DEPLOYMENT_TYPE}" \
                  SERVER_PCI_MAP="${SERVER_PCI_MAP}" SERVER_IP_RANGE_MAP="${SERVER_IP_RANGE_MAP}" \
                  HOST_USER="${HOST_USER}" CN_DEPLOYMENT="${CN_DEPLOYMENT}" N3_PCI="${N3_PCI}" N6_PCI="${N6_PCI}" \
              bash -euo pipefail "${script}" 2>&1 | tee nf_config.log
              exit ${PIPESTATUS[0]}
            '
          '''
        }
      } else {
        sh '''
          bash -lc '
            set -euo pipefail
            test -f "${SSH_KEY_PATH}" || { echo "ERROR: SSH key not found at ${SSH_KEY_PATH}"; exit 3; }
            script="$(cat .nf_script_path)"
            env SERVER_FILE="${SERVER_FILE}" SSH_KEY="${SSH_KEY_PATH}" NEW_BUILD_PATH="${NEW_BUILD_PATH}" \
                NEW_VERSION="${NEW_VERSION}" DEPLOYMENT_TYPE="${DEPLOYMENT_TYPE}" \
                SERVER_PCI_MAP="${SERVER_PCI_MAP}" SERVER_IP_RANGE_MAP="${SERVER_IP_RANGE_MAP}" \
                HOST_USER="${HOST_USER}" CN_DEPLOYMENT="${CN_DEPLOYMENT}" N3_PCI="${N3_PCI}" N6_PCI="${N6_PCI}" \
            bash -euo pipefail "${script}" 2>&1 | tee nf_config.log
            exit ${PIPESTATUS[0]}
          '
        '''
      }
    }
  }
}
